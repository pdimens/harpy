name: Test Harpy Modules

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - main

# Cancel in progress workflows on pull_requests.
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CACHE_NUMBER: 0  # increase to reset cache manually

jobs:
  changes:
    name: Detect File Changes
    runs-on: ubuntu-latest
      # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      preflight: ${{ steps.filter.outputs.preflight }}
      deconvolve: ${{ steps.filter.outputs.deconvolve }}
      demux: ${{ steps.filter.outputs.demux }}
      qc: ${{ steps.filter.outputs.qc }}
      bwa: ${{ steps.filter.outputs.bwa }}
      ema: ${{ steps.filter.outputs.ema }}
      strobealign: ${{ steps.filter.outputs.strobealign }}
      mpileup: ${{ steps.filter.outputs.mpileup }}
      freebayes: ${{ steps.filter.outputs.freebayes }}
      leviathan: ${{ steps.filter.outputs.leviathan }}
      naibr: ${{ steps.filter.outputs.naibr }}
      impute: ${{ steps.filter.outputs.impute }}
      phase: ${{ steps.filter.outputs.phase }}
      simvars: ${{ steps.filter.outputs.simvars }}
      simreads: ${{ steps.filter.outputs.simreads }}
      assembly: ${{ steps.filter.outputs.assembly }}
      other: ${{ steps.filter.outputs.other }}
      container: ${{ steps.filter.outputs.container }}
      modules: ${{ steps.filter.outputs.modules }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check Which Files Have Changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          base: 'main'
          filters: .github/filters.yml

  containerize:
    needs: changes
    name: Rebuild Container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v1
        with:
          init-shell: bash
          generate-run-shell: true
          environment-file: resources/harpy.yaml
          cache-environment: true
          post-cleanup: 'all'
      - name: Install Harpy
        shell: micromamba-shell {0}
        run: |
          python3 -m pip install --upgrade build && python3 -m build
          pip install dist/*.whl
          resources/buildforCI.sh
      - name: Clear Space
        uses: jlumbroso/free-disk-space@main
      - name: Rebuild Dockerfile
        id: rebuild
        if: ${{ needs.changes.outputs.container == 'true' }}
        shell: micromamba-shell {0}
        run: harpy containerize
      - name: Set up Docker Buildx
        id: buildx
        if: ${{ steps.rebuild.outcome == 'success' }}
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        id: dockerhub
        if: ${{ steps.buildx.outcome == 'success' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push to Dockerhub
        if: ${{ steps.dockerhub.outcome == 'success' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: pdimens/harpy:latest
#      - name: Pull Image Locally
#        id: singularity
#        shell: micromamba-shell {0}
#        if: ${{ needs.changes.outputs.modules == 'true' }}
#        run: |
#          export APPTAINER_TMPDIR=$PWD/test/
#          harpy qc --skip-reports --quiet 2 test/fastq/sample1.*.fq.gz
#      - name: Create Singularity Artifact
#        if: ${{ steps.singularity.outcome == 'success' }}
#        uses: actions/upload-artifact@v4
#        with:
#          name: deps-image
#          path: .snakemake/singularity/*.simg
#          retention-days: 1

  dmux_gen1:
    needs: [changes]
    if: ${{ needs.changes.outputs.demux == 'true' }}
    name: demux gen1
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v1
        with:
          init-shell: bash
          generate-run-shell: true
          environment-file: resources/harpy.yaml
          cache-environment: true
          post-cleanup: 'all'
      - name: Install Harpy
        shell: micromamba-shell {0}
        run: |
          python3 -m pip install --upgrade build && python3 -m build
          pip install dist/*.whl
          resources/buildforCI.sh
#     - name: Clear Space
#       uses: jlumbroso/free-disk-space@main
#      - name: Download Singularity Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: deps-image
#          path: .snakemake/singularity
      - name: harpy demultiplex
        shell: micromamba-shell {0}
        run: harpy demultiplex gen1 --quiet 2 --schema test/demux/samples.schema test/demux/Undetermined_S0_L004_R* test/demux/Undetermined_S0_L004_I*

  preflight:
    needs: [changes]
    if: ${{ needs.changes.outputs.preflight == 'true' }}
    name: preflight
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v1
        env:
          ACTIONS_STEP_DEBUG: true
        with:
          init-shell: bash
          generate-run-shell: true
          environment-file: resources/harpy.yaml
          cache-environment: true
          post-cleanup: 'all'
          log-level: error
      - name: Install Harpy
        shell: micromamba-shell {0}
        run: |
          python3 -m pip install --upgrade build && python3 -m build
          pip install dist/*.whl
          resources/buildforCI.sh
#     - name: Clear Space
#       uses: jlumbroso/free-disk-space@main
#      - name: Download Singularity Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: deps-image
#          path: .snakemake/singularity
      - name: test preflight fastq
        shell: micromamba-shell {0}
        run: harpy preflight fastq test/fastq
      - name: test preflight bam
        if: always()
        shell: micromamba-shell {0}
        run: harpy preflight bam --quiet 2 test/bam

  qc:
    needs: [changes]
    if: ${{ needs.changes.outputs.qc == 'true' }}
    name: qc
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v1
        env:
          ACTIONS_STEP_DEBUG: true
        with:
          init-shell: bash
          generate-run-shell: true
          environment-file: resources/harpy.yaml
          cache-environment: true
          post-cleanup: 'all'
          log-level: error
      - name: Install Harpy
        shell: micromamba-shell {0}
        run: |
          python3 -m pip install --upgrade build && python3 -m build
          pip install dist/*.whl
          resources/buildforCI.sh
#     - name: Clear Space
#       uses: jlumbroso/free-disk-space@main
#      - name: Download Singularity Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: deps-image
#          path: .snakemake/singularity
      - name: harpy qc
        shell: micromamba-shell {0}
        run: harpy qc -x "--low_complexity_filter" --quiet 2 test/fastq
      - name: harpy qc all options
        shell: micromamba-shell {0}
        run: harpy qc -a auto -d -c 21 40 3 0 --quiet 2 test/fastq
  deconvolve:
    needs: [changes]
    if: ${{ needs.changes.outputs.deconvolve == 'true' }}
    name: deconvolve
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v1
        env:
          ACTIONS_STEP_DEBUG: true
        with:
          init-shell: bash
          generate-run-shell: true
          environment-file: resources/harpy.yaml
          cache-environment: true
          post-cleanup: 'all'
          log-level: error
      - name: Install Harpy
        shell: micromamba-shell {0}
        run: |
          python3 -m pip install --upgrade build && python3 -m build
          pip install dist/*.whl
          resources/buildforCI.sh
#     - name: Clear Space
#       uses: jlumbroso/free-disk-space@main
#      - name: Download Singularity Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: deps-image
#          path: .snakemake/singularity
      - name: harpy deconvolve
        shell: micromamba-shell {0}
        run: harpy deconvolve --quiet 2 test/fastq
  bwa:
    needs: [changes]
    if: ${{ needs.changes.outputs.bwa == 'true' }}
    name: align BWA
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v1
        env:
          ACTIONS_STEP_DEBUG: true
        with:
          init-shell: bash
          generate-run-shell: true
          environment-file: resources/harpy.yaml
          cache-environment: true
          post-cleanup: 'all'
          log-level: error
      - name: Install Harpy
        shell: micromamba-shell {0}
        run: |
          python3 -m pip install --upgrade build && python3 -m build
          pip install dist/*.whl
          resources/buildforCI.sh
#     - name: Clear Space
#       uses: jlumbroso/free-disk-space@main
#      - name: Download Singularity Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: deps-image
#          path: .snakemake/singularity
      - name: test bwa
        shell: micromamba-shell {0}
        run: harpy align bwa --quiet 2 -g test/genome/genome.fasta.gz  -x "-A 2" test/fastq
  
  ema:
    needs: [changes]
    if: ${{ needs.changes.outputs.ema == 'true' }}
    name: align EMA
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v1
        env:
          ACTIONS_STEP_DEBUG: true
        with:
          init-shell: bash
          generate-run-shell: true
          environment-file: resources/harpy.yaml
          cache-environment: true
          post-cleanup: 'all'
          log-level: error
      - name: Install Harpy
        shell: micromamba-shell {0}
        run: |
          python3 -m pip install --upgrade build && python3 -m build
          pip install dist/*.whl
          resources/buildforCI.sh
#     - name: Clear Space
#       uses: jlumbroso/free-disk-space@main
#      - name: Download Singularity Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: deps-image
#          path: .snakemake/singularity
      - name: test ema
        shell: micromamba-shell {0}
        run: harpy align ema --quiet 2 --ema-bins 150 -g test/genome/genome.fasta.gz test/fastq

  strobe:
    needs: [changes]
    if: ${{ needs.changes.outputs.strobealign == 'true' }}
    name: align strobe
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v1
        env:
          ACTIONS_STEP_DEBUG: true
        with:
          init-shell: bash
          generate-run-shell: true
          environment-file: resources/harpy.yaml
          cache-environment: true
          post-cleanup: 'all'
          log-level: error
      - name: Install Harpy
        shell: micromamba-shell {0}
        run: |
          python3 -m pip install --upgrade build && python3 -m build
          pip install dist/*.whl
          resources/buildforCI.sh
#     - name: Clear Space
#       uses: jlumbroso/free-disk-space@main
#      - name: Download Singularity Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: deps-image
#          path: .snakemake/singularity
      - name: test strobealign
        shell: micromamba-shell {0}
        run: harpy align strobe --quiet 2 -l 125 -g test/genome/genome.fasta.gz  test/fastq

  mpileup:
    needs: [changes]
    if: ${{ needs.changes.outputs.mpileup == 'true' }}
    name: mpileup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v1
        env:
          ACTIONS_STEP_DEBUG: true
        with:
          init-shell: bash
          generate-run-shell: true
          environment-file: resources/harpy.yaml
          cache-environment: true
          post-cleanup: 'all'
          log-level: error
      - name: Install Harpy
        shell: micromamba-shell {0}
        run: |
          python3 -m pip install --upgrade build && python3 -m build
          pip install dist/*.whl
          resources/buildforCI.sh
#     - name: Clear Space
#       uses: jlumbroso/free-disk-space@main
#      - name: Download Singularity Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: deps-image
#          path: .snakemake/singularity
      - name: snp mpileup
        shell: micromamba-shell {0}
        run: harpy snp mpileup --quiet 2 -r test/positions.bed -g test/genome/genome.fasta.gz -x "--ignore-RG" test/bam
      - name: snp mpileup-pop
        shell: micromamba-shell {0}
        run: harpy snp mpileup --quiet 2 -r test/positions.bed -o SNP/poptest -g test/genome/genome.fasta.gz -p test/samples.groups  test/bam
  
  freebayes:
    needs: [changes]
    if: ${{ needs.changes.outputs.freebayes == 'true' }}
    name: freebayes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v1
        env:
          ACTIONS_STEP_DEBUG: true
        with:
          init-shell: bash
          generate-run-shell: true
          environment-file: resources/harpy.yaml
          cache-environment: true
          post-cleanup: 'all'
          log-level: error
      - name: Install Harpy
        shell: micromamba-shell {0}
        run: |
          python3 -m pip install --upgrade build && python3 -m build
          pip install dist/*.whl
          resources/buildforCI.sh
#     - name: Clear Space
#       uses: jlumbroso/free-disk-space@main
#      - name: Download Singularity Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: deps-image
#          path: .snakemake/singularity
      - name: snp freebayes
        shell: micromamba-shell {0}
        run: harpy snp freebayes --quiet 2 -r test/positions.bed -g test/genome/genome.fasta.gz -x "-g 200" test/bam
      - name: snp freebayes-pop
        shell: micromamba-shell {0}
        run: harpy snp freebayes --quiet 2 -r test/positions.bed -o SNP/poptest -g test/genome/genome.fasta.gz -p test/samples.groups  test/bam

  impute:
    needs: [changes]
    if: ${{ needs.changes.outputs.impute == 'true' }}
    name: impute
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v1
        env:
          ACTIONS_STEP_DEBUG: true
        with:
          init-shell: bash
          generate-run-shell: true
          environment-file: resources/harpy.yaml
          cache-environment: true
          post-cleanup: 'all'
          log-level: error
      - name: Install Harpy
        shell: micromamba-shell {0}
        run: |
          python3 -m pip install --upgrade build && python3 -m build
          pip install dist/*.whl
          resources/buildforCI.sh
#     - name: Clear Space
#       uses: jlumbroso/free-disk-space@main
#      - name: Download Singularity Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: deps-image
#          path: .snakemake/singularity
      - name: impute
        shell: micromamba-shell {0}
        run: harpy impute --quiet 2 --vcf test/vcf/test.bcf -p test/stitch.params  test/bam
      - name: impute from vcf
        shell: micromamba-shell {0}
        if: always()
        run: harpy impute --quiet 2 --vcf-samples -o vcfImpute --vcf test/vcf/test.bcf -p test/stitch.params  test/bam

  phase:
    needs: [changes]
    if: ${{ needs.changes.outputs.phase == 'true' }}
    name: phase
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v1
        env:
          ACTIONS_STEP_DEBUG: true
        with:
          init-shell: bash
          generate-run-shell: true
          environment-file: resources/harpy.yaml
          cache-environment: true
          post-cleanup: 'all'
          log-level: error
      - name: Install Harpy
        shell: micromamba-shell {0}
        run: |
          python3 -m pip install --upgrade build && python3 -m build
          pip install dist/*.whl
          resources/buildforCI.sh
#     - name: Clear Space
#       uses: jlumbroso/free-disk-space@main
#      - name: Download Singularity Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: deps-image
#          path: .snakemake/singularity
      - name: phase
        shell: micromamba-shell {0}
        run: harpy phase --quiet 2 --vcf test/vcf/test.bcf  -x "--max_iter 10001" test/bam
      - name: phase with indels
        shell: micromamba-shell {0}
        if: always()
        run: harpy phase --quiet 2 --vcf test/vcf/test.bcf -o phaseindel -g test/genome/genome.fasta.gz  test/bam
      - name: phase from vcf
        shell: micromamba-shell {0}
        if: always()
        run: |
          cp test/bam/sample1.bam test/bam/pineapple.bam && rename_bam.py -d pineapple1 test/bam/pineapple.bam
          harpy phase --quiet 2 --vcf-samples -o phasevcf --vcf test/vcf/test.bcf  test/bam

  leviathan:
    needs: [changes]
    if: ${{ needs.changes.outputs.leviathan == 'true' }}
    name: sv leviathan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v1
        env:
          ACTIONS_STEP_DEBUG: true
        with:
          init-shell: bash
          generate-run-shell: true
          environment-file: resources/harpy.yaml
          cache-environment: true
          post-cleanup: 'all'
          log-level: error
      - name: Install Harpy
        shell: micromamba-shell {0}
        run: |
          python3 -m pip install --upgrade build && python3 -m build
          pip install dist/*.whl
          resources/buildforCI.sh
#     - name: Clear Space
#       uses: jlumbroso/free-disk-space@main
#      - name: Download Singularity Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: deps-image
#          path: .snakemake/singularity
      - name: leviathan
        shell: micromamba-shell {0}
        run: harpy sv leviathan --quiet 2 -s 100 -b 1 -g test/genome/genome.fasta.gz  -x "-M 2002" test/bam
        continue-on-error: true
      - name: leviathan-pop
        if: always()
        shell: micromamba-shell {0}
        run: harpy sv leviathan --quiet 2 -s 100 -b 1 -g test/genome/genome.fasta.gz -o SV/leviathanpop -p test/samples.groups  test/bam

  naibr:
    needs: [changes]
    if: ${{ needs.changes.outputs.naibr == 'true' }}
    name: sv naibr
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v1
        env:
          ACTIONS_STEP_DEBUG: true
        with:
          init-shell: bash
          generate-run-shell: true
          environment-file: resources/harpy.yaml
          cache-environment: true
          post-cleanup: 'all'
          log-level: error
      - name: Install Harpy
        shell: micromamba-shell {0}
        run: |
          python3 -m pip install --upgrade build && python3 -m build
          pip install dist/*.whl
          resources/buildforCI.sh
#     - name: Clear Space
#       uses: jlumbroso/free-disk-space@main
#      - name: Download Singularity Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: deps-image
#          path: .snakemake/singularity
      - name: naibr
        shell: micromamba-shell {0}
        run: harpy sv naibr --quiet 2 -g test/genome/genome.fasta.gz -o SV/naibr test/bam_phased
      - name: naibr pop
        if: always()
        shell: micromamba-shell {0}
        run: harpy sv naibr --quiet 2 -g test/genome/genome.fasta.gz -o SV/pop -p test/samples.groups test/bam_phased
      - name: naibr with phasing
        if: always()
        shell: micromamba-shell {0}
        run: |
          harpy sv naibr --quiet 2 -g test/genome/genome.fasta.gz -o SV/phase -v test/vcf/test.phased.bcf test/bam
      - name: naibr pop with phasing
        if: always()
        shell: micromamba-shell {0}
        run: harpy sv naibr --quiet 2 -g test/genome/genome.fasta.gz -o SV/phasepop -v test/vcf/test.phased.bcf -p test/samples.groups test/bam


  simulate_variants:
    needs: [changes]
    if: ${{ needs.changes.outputs.simvars == 'true' }}
    name: simulate variants
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v1
        env:
          ACTIONS_STEP_DEBUG: true
        with:
          init-shell: bash
          generate-run-shell: true
          environment-file: resources/harpy.yaml
          cache-environment: true
          post-cleanup: 'all'
          log-level: error
      - name: Install Harpy
        shell: micromamba-shell {0}
        run: |
          python3 -m pip install --upgrade build && python3 -m build
          pip install dist/*.whl
          resources/buildforCI.sh
#     - name: Clear Space
#       uses: jlumbroso/free-disk-space@main
#      - name: Download Singularity Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: deps-image
#          path: .snakemake/singularity
      - name: simulate random snps/indels
        shell: micromamba-shell {0}
        run: |
          harpy simulate snpindel --quiet 2 --snp-count 10 --indel-count 10 -z 0.5  test/genome/genome.fasta.gz
          harpy simulate snpindel --quiet 2 --prefix Simulate/snpvcf --snp-vcf Simulate/snpindel/haplotype_1/sim.hap1.snp.vcf --indel-vcf Simulate/snpindel/haplotype_1/sim.hap1.indel.vcf  test/genome/genome.fasta.gz
      - name: simulate inversions
        shell: micromamba-shell {0}
        if: always()
        run: |
          harpy simulate inversion --quiet 2 --count 10 -z 0.5 test/genome/genome.fasta.gz
          harpy simulate inversion --quiet 2 --prefix Simulate/invvcf --vcf Simulate/inversion/haplotype_1/sim.hap1.inversion.vcf  test/genome/genome.fasta.gz
      - name: simulate cnv
        shell: micromamba-shell {0}
        if: always()
        run: |
          harpy simulate cnv --quiet 2 --count 10 -z 0.5 test/genome/genome.fasta.gz
          harpy simulate cnv --quiet 2 --prefix Simulate/cnvvcf --vcf Simulate/cnv/haplotype_1/sim.hap1.cnv.vcf  test/genome/genome.fasta.gz
      - name: simulate translocations
        shell: micromamba-shell {0}
        if: always()
        run: |
          harpy simulate translocation --quiet 2 --count 10 -z 0.5 test/genome/genome.fasta.gz
          harpy simulate translocation --quiet 2 --prefix Simulate/transvcf --vcf Simulate/translocation/haplotype_1/sim.hap1.translocation.vcf  test/genome/genome.fasta.gz

  simulate_linkedreads:
    needs: [changes]
    if: ${{ needs.changes.outputs.simreads == 'true' }}
    name: simulate linkedreads
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v1
        env:
          ACTIONS_STEP_DEBUG: true
        with:
          init-shell: bash
          generate-run-shell: true
          environment-file: resources/harpy.yaml
          cache-environment: true
          post-cleanup: 'all'
          log-level: error
      - name: Install Harpy
        shell: micromamba-shell {0}
        run: |
          python3 -m pip install --upgrade build && python3 -m build
          pip install dist/*.whl
          resources/buildforCI.sh
#     - name: Clear Space
#       uses: jlumbroso/free-disk-space@main
#      - name: Download Singularity Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: deps-image
#          path: .snakemake/singularity
      - name: simulate linked reads
        shell: micromamba-shell {0}
        run: |
          haplotag_barcodes.py -n 14000000 > test/haplotag.bc
          harpy simulate linkedreads --quiet 2 -t 4 -n 2 -b test/haplotag.bc -l 100 -p 50 test/genome/genome.fasta.gz test/genome/genome2.fasta.gz

  assembly:
    needs: [changes]
    if: ${{ needs.changes.outputs.assembly == 'true' }}
    name: assembly
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v1
        env:
          ACTIONS_STEP_DEBUG: true
        with:
          init-shell: bash
          generate-run-shell: true
          environment-file: resources/harpy.yaml
          cache-environment: true
          post-cleanup: 'all'
          log-level: error
      - name: Install Harpy
        shell: micromamba-shell {0}
        run: |
          python3 -m pip install --upgrade build && python3 -m build
          pip install dist/*.whl
          resources/buildforCI.sh
#     - name: Clear Space
#       uses: jlumbroso/free-disk-space@main
#      - name: Download Singularity Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: deps-image
#          path: .snakemake/singularity
      - name: test assembly
        shell: micromamba-shell {0}
        run: harpy assembly --quiet 2 -r 4000 test/fastq/sample1.*
      - name: test metassembly
        shell: micromamba-shell {0}
        run: harpy metassembly --quiet 2 -r 4000 test/fastq/sample1.*
      - name: test metassembly without barcodes
        shell: micromamba-shell {0}
        run: harpy metassembly --ignore-bx --quiet 2 -r 4000 test/fastq/sample1.*

  extras:
    needs: [changes]
    if: ${{ needs.changes.outputs.other == 'true' }}
    name: harpy extras
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v1
        env:
          ACTIONS_STEP_DEBUG: true
        with:
          init-shell: bash
          generate-run-shell: true
          environment-file: resources/harpy.yaml
          cache-environment: true
          post-cleanup: 'all'
          log-level: error
      - name: Install Harpy
        shell: micromamba-shell {0}
        run: |
          python3 -m pip install --upgrade build && python3 -m build
          pip install dist/*.whl
          resources/buildforCI.sh
#     - name: Clear Space
#       uses: jlumbroso/free-disk-space@main
      - name: harpy template impute
        shell: micromamba-shell {0}
        run: harpy template impute -o params.file
      - name: harpy template groupings
        shell: micromamba-shell {0}
        run: harpy template groupings test/fastq
      - name: harpy downsample bam
        shell: micromamba-shell {0}
        run: harpy downsample -d 1 --random-seed 699 --quiet 2 test/bam/sample1.bam
      - name: harpy downsample fastq
        shell: micromamba-shell {0}
        run: harpy downsample -d 1 --quiet 2 test/fastq/sample1.*gz
      - name: harpy hpc
        shell: micromamba-shell {0}
        run: |
          harpy template hpc-slurm
          harpy template hpc-googlebatch
          harpy template hpc-lsf
          harpy template hpc-generic
