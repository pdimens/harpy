name: Upload Release Tarball and Container

on:
  push:
    tags:
    - '*' # Push events of any tag created

jobs:
  build_tarball:
    name: Upload Release Tarball
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Version the Container
        # this removes the :*_latest tag and replaces with versioned container
        run: |
          for i in harpy/snakefiles/*.smk; do
            sed -i "s/_latest/_${{ github.ref_name }}/g" $i
          done
      - name: Bump Harpy Version
        # this removes the :latest tag and replaces with versioned container
        run: |
          sed -i "s/0\.0\.0/${{ github.ref_name }}/g" harpy/__main__.py
          sed -i "s/0\.0\.0/${{ github.ref_name }}/g" pyproject.toml         
      - name: Build project
        # This builds the release tarball, stripped of unneccessary things
        run: |
          mkdir artifacts
          tar --exclude="test" --exclude=".deprecated" --exclude="resources" --exclude="artifacts" --exclude=".git" --exclude=".github" -zcvf artifacts/harpy.${{ github.ref_name }}.tar.gz .
      - name: Create Release with Assets
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/harpy.${{ github.ref_name }}.tar.gz

  build_versioned_containers:
    name: Build and Push versioned container
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    strategy:
      matrix:
        env: [align, assembly, deconvolution, demultiplex, metassembly, phase, qc, report, simulations, stitch, variants]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Install Harpy
        uses: prefix-dev/setup-pixi@v0.9.2
        with:
          pixi-version: v0.56.0
          cache: true
          activate-environment: true
      - name: Clear space
        run: rm -rf /opt/hostedtoolcache
      - name: Recreate containers
        run: harpy containerize
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .container/${{ matrix.env }}
          push: true
          tags: pdimens/harpy:$${{ matrix.env }}_{{ github.ref_name }}

